{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","onSelect","selectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","sortBy","query","onChangeQuery","onDeleteQuery","onChangeSortBy","value","onChange","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","response","json","Loader","TodoModal","onDelete","useState","user","setUser","loading","setLoading","useEffect","userId","finally","href","email","name","App","setTodos","setQuery","setSelectedTodo","setSortBy","event","target","copyArrayTodos","trim","filter","toLowerCase","includes","visibleTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f36c2d77.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelect: (todo: Todo) => void,\n  selectedTodo: Todo | null,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelect,\n  selectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelect(todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","type Props = {\n  sortBy: string,\n  query: string,\n  onChangeQuery: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onDeleteQuery: () => void;\n  onChangeSortBy: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  sortBy,\n  query,\n  onChangeQuery,\n  onDeleteQuery,\n  onChangeSortBy,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={sortBy}\n          onChange={onChangeSortBy}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={onChangeQuery}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n        {query && (\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            aria-label=\"deleteSearch\"\n            onClick={onDeleteQuery}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(response => response.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  selectedTodo: Todo | null,\n  onDelete?: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onDelete,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (selectedTodo) {\n      getUser(selectedTodo.userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [selectedTodo]);\n\n  return (\n    <div\n      className={classNames(\n        'modal',\n        {\n          'is-active': selectedTodo,\n        },\n      )}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {' '}\n              {selectedTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close\"\n              onClick={onDelete}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [query, setQuery] = useState('');\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [sortBy, setSortBy] = useState('All');\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .finally(() => setLoading(false));\n  }, []);\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDeleteQuery = () => {\n    setQuery('');\n  };\n\n  const handleChangeSortBy = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSortBy(event.target.value);\n  };\n\n  const visibleTodos = () => {\n    let copyArrayTodos = [...todos];\n\n    if (query.trim() !== '') {\n      copyArrayTodos = copyArrayTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    switch (sortBy) {\n      case 'active':\n        return (copyArrayTodos.filter(todo => !todo.completed));\n\n      case 'completed':\n        return (copyArrayTodos.filter(todo => todo.completed));\n\n      default:\n        return copyArrayTodos;\n    }\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                sortBy={sortBy}\n                query={query}\n                onChangeQuery={handleChangeQuery}\n                onDeleteQuery={handleDeleteQuery}\n                onChangeSortBy={handleChangeSortBy}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              {!loading\n                && (\n                  <TodoList\n                    todos={visibleTodos()}\n                    onSelect={setSelectedTodo}\n                    selectedTodo={selectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <TodoModal\n        selectedTodo={selectedTodo}\n        onDelete={() => setSelectedTodo(null)}\n      />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}